name: Build
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [published]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16'

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn package cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn packages
        run: |
          yarn install --pure-lockfile

      - name: Run linters
        run: |
          bin/rubocop -P
          bin/erblint --lint-all
          yarn stylelint app/javascript/**/*.css
          yarn eslint app/{components,javascript}
          yarn prettier --check app/javascript/**/*.{css,js}

  security:
    name: Security
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run security checks
        run: |
          bundle exec brakeman -q -w2

  test:
    name: Test
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16'

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn package cache
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn packages
        run: |
          yarn install --pure-lockfile

      - name: Run tests
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          ADMIN_CHARACTER_IDS: 2119309952
          ALLOWED_ALLIANCE_IDS: 99010079,99003214
          CACHE_REDIS_URL: redis://localhost:6379/6
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          DATA_REDIS_URL: redis://localhost:6379/1
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/eve_indy_watch
          ESI_CLIENT_ID: 'dummy'
          ESI_CLIENT_SECRET: 'dummy'
          ESI_REDIRECT_URI: http://localhost:3000/auth/eve/callback
          LOCATIONS_READER_REDIS_URL: redis://localhost:6379/4
          LOCATIONS_WRITER_REDIS_URL: redis://localhost:6379/4
          MAIN_ALLIANCE_ID: 99003214
          MARKETS_READER_REDIS_URL: redis://localhost:6379/2
          MARKETS_WRITER_REDIS_URL: redis://localhost:6379/2
          ORDERS_READER_REDIS_URL: redis://localhost:6379/3
          ORDERS_WRITER_REDIS_URL: redis://localhost:6379/3
          QUEUE_REDIS_URL: redis://localhost:6379/5
          RAILS_ASSET_HOST: ''
          RAILS_ENV: test
          SESSIONS_REDIS_URL: redis://localhost:6379/7
          SITE_NAME: "EVE Indy Watch"
          USER_AGENT: "EVE Indy Watch Tests/1.0; (+https://github.com/bokoboshahni/eve-indy-watch)"
        with:
          coverageCommand: bin/ci-test

  features:
    name: Features
    runs-on: ubuntu-latest
    if: github.event_name != 'release'
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ["6379:6379"]
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: browser-actions/setup-chrome@latest

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16'

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn package cache
        uses: actions/cache@v2.1.6
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn packages
        run: |
          yarn install --pure-lockfile

      - name: Run tests
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          ADMIN_CHARACTER_IDS: 2119309952
          ALLOWED_ALLIANCE_IDS: 99010079,99003214
          CACHE_REDIS_URL: redis://localhost:6379/6
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          DATA_REDIS_URL: redis://localhost:6379/1
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/eve_indy_watch
          ESI_CLIENT_ID: 'dummy'
          ESI_CLIENT_SECRET: 'dummy'
          ESI_REDIRECT_URI: http://localhost:3000/auth/eve/callback
          LOCATIONS_READER_REDIS_URL: redis://localhost:6379/4
          LOCATIONS_WRITER_REDIS_URL: redis://localhost:6379/4
          MAIN_ALLIANCE_ID: 99003214
          MARKETS_READER_REDIS_URL: redis://localhost:6379/2
          MARKETS_WRITER_REDIS_URL: redis://localhost:6379/2
          ORDERS_READER_REDIS_URL: redis://localhost:6379/3
          ORDERS_WRITER_REDIS_URL: redis://localhost:6379/3
          QUEUE_REDIS_URL: redis://localhost:6379/5
          RAILS_ASSET_HOST: ''
          RAILS_ENV: test
          SESSIONS_REDIS_URL: redis://localhost:6379/7
          SITE_NAME: "EVE Indy Watch"
          USER_AGENT: "EVE Indy Watch Tests/1.0; (+https://github.com/bokoboshahni/eve-indy-watch)"
        with:
          coverageCommand: bin/ci-features

  build-and-push-image:
    name: Build and Push Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: bokoboshahni/eve-indy-watch
          tags: |
            type=edge,branch=main
            type=sha,prefix=edge-,format=short
            type=semver,pattern={{version}}
            type=semver,pattern={{version}}-alpine
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}-alpine
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=semver,pattern={{major}}-alpine,enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
      - lint
      - security
      - test
    if: github.event_name != 'release' && needs.lint.result == 'success' && needs.security.result == 'success' && needs.test.result == 'success'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '16'

      - name: Release
        env:
          GIT_AUTHOR_NAME: "Bokobo Shahni"
          GIT_AUTHOR_EMAIL: "shahni@bokobo.space"
          GIT_COMMITTER_NAME: "Bokobo Shahni"
          GIT_COMMITTER_EMAIL: "shahni@bokobo.space"
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npx -p @semantic-release/changelog -p @semantic-release/git -p semantic-release semantic-release ${{ github.event_name == 'pull_request' && '--dry-run' || ' ' }}
